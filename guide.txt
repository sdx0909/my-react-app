+------------------------+
|CHAPTER-5: CSS IN REACT |
+------------------------+

-> their are 4 ways to add css in React.
    1: Inline Styling 
    2: CSS Files
    3: CSS modules
    4: Tailwind CSS


1: Inline CSS:
--------------
-> we can specify as:

    <h3>Inline CSS</h3>
    <p style={{color: "red", textAlign: 'center'}}>
        this is paragraph in style.
    </p>

NOTE: 
-----
-> the first set of curly brackets is used to write JavaScript expressions. 
-> The second set of curly brackets initialize a JavaScript object.

Drawaback:
----------
-> One of the benefits of using the inline style approach is that you will have a simple component-focused styling technique. 
-> When using an object for styling, you can extend your style by spreading the object(...args). 
-> But in a big and complex project where you have hundreds of React components to manage, this might not be the best choice for you.
-> You can’t specify pseudo classes using inline styles. 
-> That means you can’t define rules like :hover, :focus, :active, and so on. Also, you can’t specify media queries for responsive styling.


2: CSS Files:
-------------
-> the way to add css in React is to use '.css' files.
-> Vite already knows how to handle a '.css' file, so all you need to do is import the CSS file into your JSX file.

NOTE:
-----
-> You can even include a CSS framework such as Bootstrap into React with this approach. 



3: CSS Modules:
---------------
-> A CSS module is a regular CSS file with all of its class and animation names scoped locally by default.
-> When you build your app, Vite will automatically look for CSS files that have the ".module.css" name and process the class names to a new localized name.
-> steps:
---------
1: create the "App.module.css" file in 'src' folder.
2: write the styling according to classNames as like:
-----------------------------------------------------
    .BlueParagraph {
        color: blue;
        text-align: left;
    }
    .GreenParagraph {
        color: green;
        text-align: right;
    }
-----------------------------------------------------
3: then import this styles in 'App.jsx' as:
-----------------------------------------------------
import styles from "./App.module.css";
-----------------------------------------------------
    <p className={styles.BlueParagraph}>
        The weather is sunny today.
    </p>
    <p className={styles.GreenParagraph}>
        Still, don't forget to bring your umbrella!
    </p>
-----------------------------------------------------


NOTE:
-----
-> Using CSS Modules ensures that your CSS classes are scoped locally, preventing CSS rules from colliding with each other.
-> Another advantage of using CSS Modules is that you can compose a new class by inheriting from other classes that you’ve written. 
-> Example:
-----------------------------------------------------------------
.button{
    margin-right: 0.4rem;
    font-weight: 600;
    font-size: 20px;
    border-radius: 6px;
}
.second {
    composes: button; /* '.second' composes '.button' */
    background-color: red;
}
.third {
    composes:button; /* '.third' composes '.button' */
    background-color: blue;
}
-----------------------------------------------------------------


4: Tailwind CSS:
----------------
-> Tailwind CSS is a modern utility-first CSS framework that allows you to style elements by combining a bunch of classes together.
-> CSS frameworks like 'Bootstrap' and 'Bulma' provide you with high-level components that you can immediately use in your project.
-> When you need to style a button, you just need to apply the classes that contain the desired CSS properties:
--------------------------------------------------------------
    <button className="btn btn-primary">Subscribe</button>
--------------------------------------------------------------

-> When using Bootstrap, the 'btn' class provides a combination of CSS properties such as padding, color, opacity, font weight, and so on.
->  On the other hand, Tailwind gives you utility classes where each class has only one or two properties.
------------------------------------------------------------------
    <button className='px-5 py-2 text-white bg-blue-500 border-2'>
        Subscribe   
    </button>
------------------------------------------------------------------
here :
'px-5' : is short for padding padding-left and padding-right with 5px as size.
'py-2' : is short for padding padding-top and padding-bottom with 2px as size.
'text-white ' : means 'color: white'.
'bg-blue-500' : means 'background-color:blue'.
'border-2': means 'border-width:2px'

NOTE:
-----
-> To use Tailwind in your project, you need to integrate the required JavaScript library in your project.
-> As you will practice building a React project in the next chapter, I recommend you to use CSS files because it’s the easiest way.You only need to import '.css' file in your main.jsx file.




